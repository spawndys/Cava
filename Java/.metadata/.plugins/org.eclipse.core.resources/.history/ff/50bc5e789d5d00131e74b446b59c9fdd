/*****************************************
** File: Search
** Team Name: Cava++
*Date: 10/18/13
** E-mail: Daniel Brandes bradan1@umbc.edu,
** Lizset Chavez <lizset1@umbc.edu>
** Patrick Ritchie <ritc1@umbc.edu>,
** Xiaofei He <xiaofei2@umbc.edu>,
** Yo-Han Kim <ykim18@umbc.edu>,
** Jim Millican <jmill1@umbc.edu>
** Decription- Sign in form, this is the first thing the user sees
***********************************************/
package coolgle;
import java.awt.Dimension;
import java.awt.Toolkit;

import javax.swing.JOptionPane;


public class SignInGui extends javax.swing.JFrame 
{
	// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountQuestionLabel;
    private javax.swing.JCheckBox logAdminCheck;
    private javax.swing.JLabel pswdLabel;
    private javax.swing.JPasswordField pswdText;
    private javax.swing.JButton signInBtn;
    private javax.swing.JButton signUpBtn;
    private javax.swing.JLabel signUpUpperImg;
    private javax.swing.JTextField usernameText;
    private javax.swing.JLabel usrnameLabel;
    // End of variables declaration//GEN-END:variables
    /**
     * Constructor Creates new form SignIn
     */
    public SignInGui() 
    {
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frm = super.getSize();
        int xpos = (int) (screen.getWidth() / 8 - frm.getWidth() / 2);
	int ypos = (int) (screen.getHeight() / 8 - frm.getHeight() / 2);
	super.setLocation(xpos,  ypos);
        
        initComponents(); 
        
        pswdText.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * Description-initializes components
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        signUpUpperImg = new javax.swing.JLabel();
        usrnameLabel = new javax.swing.JLabel();
        pswdLabel = new javax.swing.JLabel();
        usernameText = new javax.swing.JTextField();
        logAdminCheck = new javax.swing.JCheckBox();
        signInBtn = new javax.swing.JButton();
        accountQuestionLabel = new javax.swing.JLabel();
        signUpBtn = new javax.swing.JButton();
        pswdText = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        signUpUpperImg.setIcon(new javax.swing.ImageIcon("Images\\logo_and_info.jpg")); // NOI18N

        usrnameLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        usrnameLabel.setText("Username: ");

        pswdLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        pswdLabel.setText("Password: ");

        usernameText.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        usernameText.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        usernameText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                usernameTextFocusLost(evt);
            }
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameTextFocusGained(evt);
            }
        });

        logAdminCheck.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        logAdminCheck.setText("Log In as Administrator");


        signInBtn.setIcon(new javax.swing.ImageIcon("Images\\sign_in_button.jpg")); // NOI18N
        signInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signInBtnActionPerformed(evt);
            }
        });

        accountQuestionLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        accountQuestionLabel.setText("Don't have an account?");

        signUpBtn.setIcon(new javax.swing.ImageIcon("Images\\sign_up_button.jpg")); // NOI18N
        signUpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpBtnActionPerformed(evt);
            }
        });

        pswdText.setText("jPasswordField2");
 

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(usrnameLabel)
                            .addComponent(pswdLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(logAdminCheck)
                            .addComponent(usernameText, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                            .addComponent(signInBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pswdText)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(accountQuestionLabel)
                        .addGap(18, 18, 18)
                        .addComponent(signUpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(signUpUpperImg, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(signUpUpperImg, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usrnameLabel)
                    .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pswdText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pswdLabel))
                .addGap(18, 18, 18)
                .addComponent(logAdminCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(signInBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(signUpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(accountQuestionLabel))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    /**
     * signInBtnActionPerformed
     * Description - Called when user presses the sign in button
     * Provides error messages if any of the following cases : 
     * - Password or Username fields are blank
     * - Password and username combination are not found in UID-pass file 
     */
    private void signInBtnActionPerformed(java.awt.event.ActionEvent evt) 
    {
        String un = this.usernameText.getText();
        char[] pass = this.pswdText.getPassword();
        
        if (un.isEmpty() || pass.length == 0)
        {
            //Enter info box
             JOptionPane.showMessageDialog(null, "Please Enter a username and password", 
                                            "Not enough information", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            boolean isAdmin = this.logAdminCheck.isSelected();
            int userType = isAdmin ? 1 : 0;

            //and check if it is valid
            UserAuthentication newAuthenicator = new UserAuthentication();
            boolean correctCredidentials = newAuthenicator.logUser(un, pass, userType); 
            boolean adminView = this.logAdminCheck.isSelected();
            if (correctCredidentials)
            {
                if (un.compareTo("admin") == 0)
                {
                    JOptionPane.showMessageDialog(null, "Note : You are about to log into the default admin account \n"
                        + "This account can only be used for administrative purposes\n"
                        + "You will not be able to map trips from this account", "Admin Account", JOptionPane.WARNING_MESSAGE);
                    adminView = true; 
                }
                if(adminView) 
                {// admin
                     this.setVisible(false);
                    adminGui admin = new adminGui(un);
                    admin.setVisible(true);
                } 
                else
                {//User
                    this.setVisible(false);
                    mainGui user = new mainGui(un);
                    user.setVisible(true);
                }
            }
            else // Not correct Creds, show error message. 
            {
                 JOptionPane.showMessageDialog(null, "User name and password are incorrect \n"
                                                + "Ensure all fields are correct including admin checkbox and try again\n"
                                                + "Sign up for a new acccount by clicking the Sign Up Here button\n\n"
                                                + "Note : Admins can reset passwords", "Invalid Login", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_signInBtnActionPerformed


/**
 * Description text field commands Initial
 * @param evt
 */
    private void usernameTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextFocusGained
    if(this.usernameText.getText().equals("Enter your username"))
        this.usernameText.setText("");
    }//GEN-LAST:event_usernameTextFocusGained
    /**
     * Description text field commands text field lost
     * @param evt
     */
    private void usernameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextFocusLost
      
       if(this.usernameText.getText().equals(""))
      this.usernameText.setText("Enter your username");
    }//GEN-LAST:event_usernameTextFocusLost

    /**
     * Description signUpBtnActionPerformed action listener
     * @param evt
     */
    private void signUpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpBtnActionPerformed
    	this.setVisible(false);
    	SignUpGui ho = new SignUpGui();
    	ho.setVisible(true);
    }//GEN-LAST:event_signUpBtnActionPerformed


    
}
